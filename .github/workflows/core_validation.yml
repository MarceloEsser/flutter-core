name: Flutter Lints and Tests
on:
  push:
    branches:
      - master
      - feature/*
      - hotfix/*
      - release/*
  pull_request:
    branches:
      - master    
jobs:
  update_version:
    runs-on: ubuntu-latest
    needs: [lint, tests]
    steps:
      - uses: actions/checkout@v2
      - name: Update version
        run: |
          # Get the current version from pubspec.yaml
          current_version=$(grep -E 'version: ' pubspec.yaml | cut -d' ' -f2)
          # Increment the patch version
          new_version="${current_version%.*}"."$(( ${current_version##*.} + 1 ))"
          echo "Updating version to $new_version..."
          # Update the version in pubspec.yaml
          sed -i "s/$current_version/$new_version/g" pubspec.yaml
          # Commit and push the changes
          git config user.name "GitHub Actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -am ":bookmark: Update version to $new_version"
          git push
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - run: flutter pub get
      - run: flutter pub run build_runner build
      - run: flutter analyze
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - run: flutter pub get
      - run: flutter pub run build_runner build
      - run: flutter test --coverage
      - run: flutter test --coverage --reporter=json | tee test-results.json
      
      - name: Generate coverage report
        run: |
          echo "# Cobertura de testes" > COVERAGE.md
          echo "## Cobertura geral" >> COVERAGE.md
          # Extraia a porcentagem de cobertura do arquivo lcov.info (adapte o comando se necessÃ¡rio)
          cat lcov.info | grep -Po 'Lines executed: \d+' | cut -d ':' -f 2 | xargs echo | tr -d ' ' >> coverage.md
          echo "## Resultados dos testes" >> COVERAGE.md
          python -c "import json; with open('test-results.json') as f: results = json.load(f); for test in results['tests']: print(f'- {test["name"]}: {test["status"]}', file=open('COVERAGE.md', 'a'))"

  
